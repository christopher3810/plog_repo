<configuration>
  <!-- 콘솔 출력을 위한 appender 설정. -->
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- 출력할 메시지의 패턴 설정. -->
    <encoder>
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <!-- 파일 저장을 위한 appender 설정. -->
  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- 로그 파일을 어떻게 굴릴지 정하는 정책 설정 -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!-- 매일 새로운 로그 파일을 생성하며, 이 파일을 'WebFluxLog/yyyy-MM-dd' 디렉토리에 'webfluxlog.log' 파일로 저장 -->
      <fileNamePattern>logs/%d{yyyy_MM_dd}/webflux.log</fileNamePattern>
      <!-- 로그 파일의 보존 기간 설정. 여기서는 30일치의 로그를 보관 -->
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <!-- 출력할 메시지의 패턴 설정. -->
    <encoder>
      <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
    </encoder>
  </appender>

  <!-- root logger 설정. 모든 로그 메시지는 최소한 이 root logger를 통해 처리.
       로그 레벨을 info로 설정하면, info 레벨 이상의 로그만 처리. -->
  <root level="info">
    <!-- root logger가 사용할 appender를 지정. STDOUT과 FILE appender를 모두 사용합니다. -->
    <appender-ref ref="STDOUT" />
    <appender-ref ref="FILE" />
  </root>

  <!-- "com.example" 패키지에 대한 logger 설정.
       이 설정은 "com.example" 패키지에 있는 클래스들의 로그 레벨을 debug로 설정하며,
       이 클래스들의 로그 메시지는 STDOUT과 FILE appender를 통해 출력됩니다. -->
  <logger name="com.example" level="debug" additivity="false">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="FILE" />
  </logger>
</configuration>